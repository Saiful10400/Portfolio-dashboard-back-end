// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(moderator)
  status    Status   @default(active)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

enum Role {
  admin
  superAdmin
  moderator
}

enum Status {
  active
  block
}

model PersonalInfo {
  id         Int     @id @unique @default(1)
  name       String
  title      String // e.g., "Full-Stack Developer"
  bio        String? // Optional: A short biography
  email      String
  phone      String? // Optional
  address    String? // Optional
  profilePic String? // URL to profile picture

  // Social and contact links
  linkedIn  String? // Optional: LinkedIn profile URL
  github    String? // Optional: GitHub profile URL
  twitter   String? // Optional: Twitter handle or profile URL
  facebook  String? // Optional: Facebook profile URL
  instagram String? // Optional: Instagram profile URL
  website   String? // Optional: Personal website or blog URL
  whatsapp  String? // Optional: WhatsApp number
  telegram  String? // Optional: Telegram username or link

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model blog {
  id            String   @id @default(uuid())
  title         String
  slug          String   @unique
  content       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  tags          String[]
  status        String   @default("published")
  featuredImage String?
  isDeleted     Boolean  @default(false)
}

model project {
  id                      String   @id @default(uuid())
  projectName             String // Name of the project
  description             String // Detailed description of the project
  projectSummary          String // Short summary or overview of the project
  technologies            String[] // List of technologies used in the project
  slug                    String   @unique
  projectLink             String? // Optional link to the project
  repoLink                String? // Optional link to the project's repository
  projectCreationDate     DateTime // Creation date of the project
  updatedAt               DateTime @updatedAt // Automatically updated timestamp
  coverImage              String? // Optional image of the project
  isDeleted               Boolean  @default(false)
  images                  String[] // Array of image URLs for the project
  projectCreationDuration String? // Duration of the project creation, e.g., "3 months"
}

model Experience {
  id                String    @id @default(uuid()) // Unique identifier
  companyName       String // Name of the company
  companyWebsiteUrl String? // Company's official website URL (optional)
  role              String // Job title or role
  certificate       String?
  startDate         DateTime // When the experience started
  endDate           DateTime? // When the experience ended (nullable for current roles)
  description       String // Brief description of responsibilities or achievements
  technologies      String[] // Array of technologies/tools used
  location          String // Location of the job (e.g., remote, city, country)
  isCurrent         Boolean   @default(false) // Whether this is the current role
  createdAt         DateTime  @default(now()) // Record creation timestamp
  updatedAt         DateTime  @updatedAt // Record update timestamp
}
